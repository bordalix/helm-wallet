error_log stderr warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/wasm
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/x-javascript
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Use /tmp for client body temp files
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path    /tmp/fastcgi_temp;
    uwsgi_temp_path      /tmp/uwsgi_temp;
    scgi_temp_path       /tmp/scgi_temp;

    # Logging to stderr for Docker
    access_log /dev/stderr;
    error_log /dev/stderr warn;

    map $sent_http_content_type $expires {
        application/wasm 0;
        default 1y;
    }

    server {
        listen 8370;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        absolute_redirect off;

        # Handle static files
        location /static {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000";
            try_files $uri =404;
        }

        # Handle index.html
        location = / {
            add_header Cache-Control "no-store, must-revalidate";
            add_header Cross-Origin-Embedder-Policy "require-corp";
            add_header Cross-Origin-Opener-Policy "same-origin";
            try_files /index.html =404;
            default_type text/html;
        }

        location = /index.html {
            add_header Cache-Control "no-store, must-revalidate";
            add_header Cross-Origin-Embedder-Policy "require-corp";
            add_header Cross-Origin-Opener-Policy "same-origin";
            default_type text/html;
        }

        # Service worker
        location = /sw.js {
            add_header Content-Type "application/javascript";
            add_header Cache-Control "no-store, must-revalidate";
            add_header Service-Worker-Allowed "/";
            expires off;
        }

        # Handle manifest.json
        location = /manifest.json {
            add_header Cache-Control "no-cache";
            expires 0;
            default_type application/json;
        }

        # Everything else
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "public, max-age=31536000";
            expires 1y;
        }
    }
} 